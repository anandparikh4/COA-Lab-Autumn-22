R-Instruction Format : 
	5-bit opcode
	5-bit reg1
	5-bit reg2
	5-bit shamt  (add redundant here)
	5-bit function code

I-instruction Format : 
	5-bit opcode
	5-bit reg1
	5-bit reg2
	17-bit imm

B-instruction Format : 
	5-bit opcode
	5-bit reg
	17-bit branch address
	5-bit function code

J-instruction Format :
	5-bit opcode
	27-bit addr

Opcodes and Function Codes : 

0	Add,Comp,shllv, shrlv , shrav, diff,AND,XOR	R
	0,1,2,3,4,5,6,7

1	Add immediate			- Immediate
2	Complement Immediate		- Immediate

5	lw	Immediate
6	sw	Immediate

7	br,bltz,bz,bnz     - B
	0,1,2,3

8	b		J
9	bl		J

10	bcy		J
11	bncy		J

13	shll, shrl, shra	R
	0,1,2


Datapath Elements :

PC
Instruction Memory
Register File
Sign Extend (for immediate)
ALU 
Data Memory
Adder (for PC = PC+4)
Adder (for PC = PC+4+offset)

Control Path :

// single port ROM
instruction_memory instruction_memory (
  .clka(clk), // input clka
  .addra(curr_pc), // input [31 : 0] addra
  .douta(instr) // output [31 : 0] douta
);

// single port RAM
data_memory data_memory (
  .clka(clk), // input clka
  .ena(mem_read), // input ena
  .wea(mem_write), // input wea
  .addra(alu_out), // input [31 : 0] addra
  .dina(read_data_2), // input [31 : 0] dina
  .douta(mem_out) // output [31 : 0] douta
);


Report Contents :

1) Instruction formats
2) OPcodes and FNcodes
3) Control Signals
4) ALUop
5) Datapath Diagram
6) ALU Diagram




































	

	
	
	
	
	
	